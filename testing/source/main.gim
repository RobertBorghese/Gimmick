

import alt

start namespace test.aa2.qqq

var fd = 23 + A.athing

var aaa = 1
var aas: int = 12

const bla = 12

var bla2 = 23
var dasa = bla + 1

aas = 1 + 12

aas = 1

aas = 2

aas = bla * 33

var blastring = ""

blastring = "test"

end namespace # test.aa2.qqq

var ttt = test.aa2.qqq.bla2

var bla43 = 12

var bla = test.aa2.qqq.aas

var atestaagin = (12, 43)
const blablaabla = ("qreewq", "fdklskflds")

var newthing = (32)

def bla4343 -> int:
	var bla = 12;
	bla++;
	if bla == 13:
		var fdhjsfdsk = 4343
		bla--
	else if bla == 14:
		bla++
	else:
		bla++
	scope:
		var bla = 12;
		bla++
		bla++

	loop:
		bla++

	while bla < 300: bla--; bla--

	return(0);

bla++

bla++

def fjdklsfjs(): var fdsfs = 32; fdsfs--;

bla4343()

get aaaa -> int:
	var fds = 32;
	return 32;

set aaaa(i: int) -> double:
	return 32

var fkd = aaaa = 2

@if(!!js != false) scope:
	var fdsfsd = 342

@cppInject(fjdklsfjds)

print("fdsfds")

###
modify number:
	@RequireInclude(cmath.h, true)
	inject def floor -> number:
		@if(cpp) @untyped scope:
			return floor(self);
		@elseif(js) @untyped scope:
			return Math.floor(self);
###
